


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         
    3 00000000         ;*******************************************************
                       *****************
    4 00000000                 THUMB
    5 00000000                 REQUIRE8
    6 00000000                 PRESERVE8
    7 00000000         ;*******************************************************
                       *****************
    8 00000000         
    9 00000000                 include          REG_UTILES.inc
    1 00000000         
    2 00000000         ;**************************************
    3 00000000         ;     Les adresess utiles  
    4 00000000         ;***************************************
    5 00000000         
    6 00000000         
    7 00000000         ;**************************************
    8 00000000         ;     Affectation des bits GPIO  
    9 00000000         ;***************************************
   10 00000000         ; GSLCK..... PA0 
   11 00000000         ; DSPRG..... PA1 
   12 00000000         ; BLANK..... PA2 
   13 00000000         ; XLAT...... PA3
   14 00000000         ; VPRG...... PA4
   15 00000000         ; SCLK...... PA5
   16 00000000         ; SIN1...... PA7
   17 00000000         ;Capteur.....PA8
   18 00000000         
   19 00000000         ;LED.........PB10
   20 00000000         ;****************************************/
   21 00000000         
   22 00000000         
   23 00000000         
   24 00000000 40010800 
                       GPIOBASEA
                               EQU              0X40010800
   25 00000000 40010C00 
                       GPIOBASEB
                               EQU              0X40010C00
   26 00000000         
   27 00000000 00000008 
                       OffsetInput
                               EQU              0x08
   28 00000000 0000000C 
                       OffsetOutput
                               EQU              0x0C
   29 00000000 00000010 
                       OffsetSet
                               EQU              0x10
   30 00000000 00000014 
                       OffsetReset
                               EQU              0x14
   31 00000000         
   32 00000000         
   33 00000000 00000080 
                       MaskSerial_In1
                               equ              0x80
   34 00000000 00000080 



ARM Macro Assembler    Page 2 


                       MaskSerial_Dots
                               equ              0x80
   35 00000000 00000010 
                       MaskVprg
                               equ              0x10
   36 00000000 00000008 
                       MaskXlat
                               equ              0x08
   37 00000000 00000004 
                       MaskBlank
                               equ              0x04
   38 00000000 00000020 
                       MaskSclk
                               equ              0x20
   39 00000000 00000002 
                       MaskDsprg
                               equ              0x02
   40 00000000 00000001 
                       MaskGsclk
                               equ              0x01
   41 00000000         
   42 00000000         
   43 00000000 E000ED08 
                       SCB_VTOR
                               EQU              0xE000ED08
   44 00000000 40012C10 
                       TIM1_SR EQU              0x40012c10
   45 00000000 40012C24 
                       TIM1_CNT
                               EQU              0x40012c24
   46 00000000 4000082C 
                       TIM4_ARR
                               EQU              0x4000082C
   47 00000000 40000810 
                       TIM4_SR EQU              0x40000810
   48 00000000         
   49 00000000         
   50 00000000         
   51 00000000         
   52 00000000         
   53 00000000                 END
   10 00000000         
   11 00000000         
   12 00000000         ;*******************************************************
                       *****************
   13 00000000         ;      IMPORT/EXPORT Système
   14 00000000         ;*******************************************************
                       *****************
   15 00000000         
   16 00000000                 IMPORT           ||Lib$$Request$$armlib|| [CODE,
WEAK]
   17 00000000         
   18 00000000         
   19 00000000         
   20 00000000         
   21 00000000         ; IMPORT/EXPORT de procédure           
   22 00000000         
   23 00000000                 IMPORT           Init_Cible
   24 00000000                 IMPORT           Allume_LED



ARM Macro Assembler    Page 3 


   25 00000000                 IMPORT           Eteint_LED
   26 00000000                 EXPORT           main
   27 00000000         
   28 00000000         ;*******************************************************
                       ************************
   29 00000000         
   30 00000000         
   31 00000000         ;*******************************************************
                       ************************
   32 00000000                 AREA             mesdonnees, data, readwrite
   33 00000000         
   34 00000000 01      OldEtat DCB              1
   35 00000001         
   36 00000001         
   37 00000001         ;*******************************************************
                       ************************
   38 00000001         
   39 00000001                 AREA             moncode, code, readonly
   40 00000000         
   41 00000000         
   42 00000000         
   43 00000000         ;*******************************************************
                       ************************
   44 00000000         ; Procédure principale et point d'entrée du projet
   45 00000000         ;*******************************************************
                       ************************
   46 00000000         main    PROC
   47 00000000         ;*******************************************************
                       ************************
   48 00000000         
   49 00000000         
   50 00000000 F04F 0000       MOV              R0,#0
   51 00000004 F7FF FFFE       BL               Init_Cible  ;
   52 00000008 F8DF 804C       LDR              R8,=GPIOBASEA+OffsetInput+0x01 
                                                            ;R8 adresse du capt
                                                            eur
   53 0000000C F8DF 904C       LDR              R9,=GPIOBASEB+OffsetOutput ;R9 
                                                            adresse du output
   54 00000010         
   55 00000010 4A13            LDR              R2,=OldEtat
   56 00000012 4E13            LDR              R6,=OldEtat
   57 00000014 F04F 0402       MOV              R4,#2       ;on initialise le c
                                                            ompteur a 2
   58 00000018         
   59 00000018 7016    boucle  STRB             R6,[R2]     ;memorise l'ancien 
                                                            etat dans R2
   60 0000001A F898 6000       LDRB             R6,[R8]     ;R6 le nouvel etat 
                                                            du capteur
   61 0000001E F006 0601       AND              R6,#1       ;R6 le premier bit 
                                                            du capteur
   62 00000022 7815            LDRB             R5,[R2]     ;on met l'ancien et
                                                            at dans R5 pour com
                                                            parer
   63 00000024         ;pour un front montant on cherche ancien etat a 0 et nou
                       vel etat a 1
   64 00000024 2D00            CMP              R5,#0       ;compare ancien eta
                                                            t avec 0
   65 00000026 D1F7            BNE              boucle
   66 00000028 2E01            CMP              R6,#1       ;compare nouvel eta



ARM Macro Assembler    Page 4 


                                                            t avec 1
   67 0000002A D1F5            BNE              boucle
   68 0000002C         
   69 0000002C F8D9 3000       LDR              R3,[R9]     ;on recupere l'etat
                                                             actuel de la LED
   70 00000030 F403 6380       AND              R3,#0x01<<10 ;on garde seulemen
                                                            t le 10 eme bit
   71 00000034 3C01            SUBS             R4,#1       ;on reduit le compt
                                                            eur de 1
   72 00000036 D003            BEQ              allume      ;si le compteur est
                                                             a 0 on allume la L
                                                            ED
   73 00000038         
   74 00000038 F5B3 6F80       CMP              R3,#0x01<<10 ;on regarde si la 
                                                            LED est allume ou e
                                                            teinte
   75 0000003C D006            BEQ              eteint
   76 0000003E D1FF            BNE              allume
   77 00000040         
   78 00000040 F7FF FFFE 
                       allume  BL               Allume_LED  ;
   79 00000044 2C00            CMP              R4,#0       ;si le compteur est
                                                             a 0 on sort
   80 00000046 D005            BEQ              sortie
   81 00000048 F7FF FFE6       BL               boucle
   82 0000004C F7FF FFFE 
                       eteint  BL               Eteint_LED
   83 00000050 F7FF FFE2       BL               boucle
   84 00000054         
   85 00000054 E7FE    sortie  B                sortie
   86 00000056         
   87 00000056         
   88 00000056         
   89 00000056         
   90 00000056                 ENDP
   91 00000056         
   92 00000056                 END
              00 00 40010809 
              40010C0C 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\principale.d -o.\objects\principale.o -I.\RTE\Device\STM
32F103RB -I.\RTE\_Simul_ -IC:\Users\ordinateur\AppData\Local\Arm\Packs\ARM\CMSI
S\5.6.0\CMSIS\Core\Include -IC:\Users\ordinateur\AppData\Local\Arm\Packs\Keil\S
TM32F1xx_DFP\2.3.0\Device\Include --predefine="__EVAL SETA 1" --predefine="__MI
CROLIB SETA 1" --predefine="__UVISION_VERSION SETA 529" --predefine="_RTE_ SETA
 1" --predefine="STM32F10X_MD SETA 1" --predefine="STM32F10X_MD SETA 1" --list=
.\listings\principale.lst Principale.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

OldEtat 00000000

Symbol: OldEtat
   Definitions
      At line 34 in file Principale.asm
   Uses
      At line 55 in file Principale.asm
      At line 56 in file Principale.asm

mesdonnees 00000000

Symbol: mesdonnees
   Definitions
      At line 32 in file Principale.asm
   Uses
      None
Comment: mesdonnees unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

allume 00000040

Symbol: allume
   Definitions
      At line 78 in file Principale.asm
   Uses
      At line 72 in file Principale.asm
      At line 76 in file Principale.asm

boucle 00000018

Symbol: boucle
   Definitions
      At line 59 in file Principale.asm
   Uses
      At line 65 in file Principale.asm
      At line 67 in file Principale.asm
      At line 81 in file Principale.asm
      At line 83 in file Principale.asm

eteint 0000004C

Symbol: eteint
   Definitions
      At line 82 in file Principale.asm
   Uses
      At line 75 in file Principale.asm
Comment: eteint used once
main 00000000

Symbol: main
   Definitions
      At line 46 in file Principale.asm
   Uses
      At line 26 in file Principale.asm
Comment: main used once
moncode 00000000

Symbol: moncode
   Definitions
      At line 39 in file Principale.asm
   Uses
      None
Comment: moncode unused
sortie 00000054

Symbol: sortie
   Definitions
      At line 85 in file Principale.asm
   Uses
      At line 80 in file Principale.asm
      At line 85 in file Principale.asm

6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIOBASEA 40010800

Symbol: GPIOBASEA
   Definitions
      At line 24 in file REG_UTILES.inc
   Uses
      At line 52 in file Principale.asm
Comment: GPIOBASEA used once
GPIOBASEB 40010C00

Symbol: GPIOBASEB
   Definitions
      At line 25 in file REG_UTILES.inc
   Uses
      At line 53 in file Principale.asm
Comment: GPIOBASEB used once
MaskBlank 00000004

Symbol: MaskBlank
   Definitions
      At line 37 in file REG_UTILES.inc
   Uses
      None
Comment: MaskBlank unused
MaskDsprg 00000002

Symbol: MaskDsprg
   Definitions
      At line 39 in file REG_UTILES.inc
   Uses
      None
Comment: MaskDsprg unused
MaskGsclk 00000001

Symbol: MaskGsclk
   Definitions
      At line 40 in file REG_UTILES.inc
   Uses
      None
Comment: MaskGsclk unused
MaskSclk 00000020

Symbol: MaskSclk
   Definitions
      At line 38 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSclk unused
MaskSerial_Dots 00000080

Symbol: MaskSerial_Dots
   Definitions
      At line 34 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_Dots unused
MaskSerial_In1 00000080

Symbol: MaskSerial_In1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file REG_UTILES.inc
   Uses
      None
Comment: MaskSerial_In1 unused
MaskVprg 00000010

Symbol: MaskVprg
   Definitions
      At line 35 in file REG_UTILES.inc
   Uses
      None
Comment: MaskVprg unused
MaskXlat 00000008

Symbol: MaskXlat
   Definitions
      At line 36 in file REG_UTILES.inc
   Uses
      None
Comment: MaskXlat unused
OffsetInput 00000008

Symbol: OffsetInput
   Definitions
      At line 27 in file REG_UTILES.inc
   Uses
      At line 52 in file Principale.asm
Comment: OffsetInput used once
OffsetOutput 0000000C

Symbol: OffsetOutput
   Definitions
      At line 28 in file REG_UTILES.inc
   Uses
      At line 53 in file Principale.asm
Comment: OffsetOutput used once
OffsetReset 00000014

Symbol: OffsetReset
   Definitions
      At line 30 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetReset unused
OffsetSet 00000010

Symbol: OffsetSet
   Definitions
      At line 29 in file REG_UTILES.inc
   Uses
      None
Comment: OffsetSet unused
SCB_VTOR E000ED08

Symbol: SCB_VTOR
   Definitions
      At line 43 in file REG_UTILES.inc
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: SCB_VTOR unused
TIM1_CNT 40012C24

Symbol: TIM1_CNT
   Definitions
      At line 45 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_CNT unused
TIM1_SR 40012C10

Symbol: TIM1_SR
   Definitions
      At line 44 in file REG_UTILES.inc
   Uses
      None
Comment: TIM1_SR unused
TIM4_ARR 4000082C

Symbol: TIM4_ARR
   Definitions
      At line 46 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_ARR unused
TIM4_SR 40000810

Symbol: TIM4_SR
   Definitions
      At line 47 in file REG_UTILES.inc
   Uses
      None
Comment: TIM4_SR unused
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Allume_LED 00000000

Symbol: Allume_LED
   Definitions
      At line 24 in file Principale.asm
   Uses
      At line 78 in file Principale.asm
Comment: Allume_LED used once
Eteint_LED 00000000

Symbol: Eteint_LED
   Definitions
      At line 25 in file Principale.asm
   Uses
      At line 82 in file Principale.asm
Comment: Eteint_LED used once
Init_Cible 00000000

Symbol: Init_Cible
   Definitions
      At line 23 in file Principale.asm
   Uses
      At line 51 in file Principale.asm
Comment: Init_Cible used once
|Lib$$Request$$armlib| 00000000

Symbol: |Lib$$Request$$armlib|
   Definitions
      At line 16 in file Principale.asm
   Uses
      None
Comment: |Lib$$Request$$armlib| unused
4 symbols
368 symbols in table
